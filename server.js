// Generated by CoffeeScript 1.6.3
(function() {
  var app, cheerio, deferred, deferredRequest, express, getChart, moment, request;

  express = require('express');

  request = require("request");

  deferred = require("deferred");

  cheerio = require("cheerio");

  moment = require('moment');

  app = express();

  app.use(express["static"](__dirname + '/public'));

  exports.startServer = function(port, path, callback) {
    app.get('/', function(req, res) {
      return res.sendfile('./public/index.html');
    });
    app.listen(port);
    console.log('Listening on port: ' + port);
    app.get("/api/chart/:station", function(req, res) {
      var newChart;
      return newChart = getChart(req.params.station.toLowerCase(), "", res);
    });
    app.get("/api/chart/:station/:date", function(req, res) {
      var newChart, newDate;
      newDate = moment(req.params.date);
      if (newDate.get('day') !== 2) {
        newDate.set('day', 2);
      }
      return newChart = getChart(req.params.station.toLowerCase(), newDate.format('YYYY-MM-DD'), res);
    });
  };

  deferredRequest = function(url) {
    var d;
    d = deferred();
    request(url, function(err, resp, body) {
      if (err) {
        d.reject(new Error("Unable to fetch '" + url + "', reason: " + err));
        return;
      }
      if (resp.statusCode !== 200) {
        d.reject(new Error("Unable to fetch '" + url + "', code: " + resp.statusCode));
        return;
      }
      d.resolve(body);
    });
    return d.promise();
  };

  getChart = function(station, week, res) {
    var chartParse, the_url;
    chartParse = function(body) {
      var $, chart_array;
      $ = cheerio.load(body);
      chart_array = [];
      $("th").parents("table").find("tr").each(function(index, item) {
        var album, artist, chartPos, label, tds;
        if (index > 3 && index < 34) {
          tds = $(item).find("td");
          chartPos = $(tds.eq(0)).text().trim();
          artist = tds.eq(2).text().trim();
          album = tds.eq(3).text().trim();
          label = tds.eq(4).text().trim();
          chart_array.push({
            position: chartPos,
            artist: artist,
            album: album,
            label: label
          });
        }
      });
      return deferred(chart_array);
    };
    if (week === '') {
      the_url = "http://www.earshot-online.com/charts/" + station + ".cfm";
    } else {
      the_url = "http://www.earshot-online.com/charts/" + station + ".cfm?dWeekOfID=" + week;
    }
    console.log(the_url);
    deferredRequest(the_url).then(chartParse).done(function(chart_res) {
      console.log('Got them');
      res.send(chart_res);
    });
  };

}).call(this);
